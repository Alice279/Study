-------
对象的分类

1.内建对象

由ES标准中定义的对象，在任何的ES实现中都可以使用。比如 Math String Number

2.宿主对象

由JS的运行环境提供的对象，目前来讲主要是指由浏览器提供的对象。比如 BOM DOM

3.自定义对象

开发人员自己创建的对象

-------
对象基本操作

* 创建对象 var obj = new Object();

使用 new 关键字调用的函数是 构造函数 constructor

构造函数是专门用来创建对象的函数

* 给对象添加属性，修改属性

obj.name = value  obj[name] = value

* 读取属性，检查属性存在

如果读取对象中没有的属性，不会报错而是返回undefined

in 运算符用来检查一个对象中是否含有指定的属性 “属性名” in 对象

-------
基本数据类型 和 引用数据类型

* 关于存储

JS中的变量都是保存在 栈内存中

基本数据类型的值直接在栈内存中存储，值与值之间独立存在，修改一个变量不会影响其它变量

引用数据类型数据是保存在堆内存中，每new一个新的对象，就会在堆内存中开辟出一个新的空间

而栈中保存好变量名和变量对应的对象的内存地址（对象的引用）

这时一个对象赋值给另一个对象，就是把保存的内存地址给了它，所以它们指向同一块堆内存

两个对象都和这一块内存产生了链接，如果想断开连接，就 obj = null 

* 关于比较 == 

基本数据类型就是比较值

引用数据类型，我们看到的是值，但是实际比较的是栈里存储的堆的内存地址

-------
对象字面量创建对象

var obj = {属性名：属性值，……}









